{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001ast\u0001 in\u0001/\u0001 (Found 47 matches in 7 files)\n\n/Gruntfile.js:\n\t26: \t\t\t\t\t\treturn filepath.substr( filepath.lastIndexOf('/'));\n\n/src/data/grammar.js:\n\t468:                         //if it is not last one or the previous one is not empty\n\n/src/data/stackItem.js:\n\t17:         * @param {Automata} options.AST The underprocessing AST. The Sub-tree AST for the current node\n\t25:             k.utils.obj.defineProperty(this, 'AST');\n\n/src/parser/parser.js:\n\t73: \t\t\t\tlastItem = this.stack[this.stack.length-1];\n\t77: \t\t\t\tactionToDo = this.actionTable(lastItem.state.getIdentity(), this.currentInput.terminal);\n\t80: \t\t\t\t\tlastItem.symbol = this.currentInput.terminal;\n\t81: \t\t\t\t\tlastItem.currentValue = this.currentInput.string;\n\t86: \t\t\t\t\tlastItem = this._reduce(actionToDo);\n\t90: \t\t\t\t\tlastItem = this._reduce(actionToDo);\n\t96: \t\t\t\tstateToGo = this.gotoTable[lastItem.state.getIdentity()][lastItem.symbol];\n\t106: \t\t\t\tlastItem = this.stack[this.stack.length-1];\n\t113: \t\t* @returns {Object} The last item in the stack already updated */\n\t117: \t\t\t//Generate AST!\n\t120: \t\t\t\tlastItem = this.stack[this.stack.length - 1];\n\t128: \t\t\t\t// Get the last n (rule length) elements of the stack ignoring the last one, which is just there for the previous GoTo Action.\n\t138: \t\t\t\tlastItem = this.stack[this.stack.length - 1];\n\t139: \t\t\t\tlastItem.symbol = actionToDo.rule.head;\n\t140: \t\t\t\tlastItem.currentValue = k.utils.obj.isFunction(actionToDo.rule.reduceFunc) ? actionToDo.rule.reduceFunc.call(this, reduceFunctionParameters) : lastItem.symbol;\n\t143: \t\t\treturn lastItem;\n\n/src/utils/obj.js:\n\t217: \t\t// \t\tlastArgument = arguments[arguments.length - 1],\n\t221: \t\t// \tif(__isFunction(lastArgument)) {\n\t222: \t\t// \t\tareEqualFunction = lastArgument;\n\t449: \t\t/* @func Determine if at least one element in the object matches a truth test\n\t453:         * @returns {Boolean} True if at least one item pass the predicate, false otherwise\n\t671:         * @param {Booelan} isSorted When the array is sorted pass true and the algorithm will perform a faster approach\n\t701: \t\t/* @func Produce a duplicate-free version of the array. If the array has already been sorted, you have the option of using a faster algorithm.\n\n/tests/specs/parser/specAutomataLR0Generator.js:\n\t302: \t\t\t//TODO ADD AT LEAST 2 MORE LR(0) GRAMMARS!\n\t332: \t\t\t//TODO ADD AT LEAST 2 MORE LR(0) GRAMMARS SAMPLES!\n\n/tests/specs/utils/specObj.js:\n\t83: \t\t\tit('should at least specify context and property name', function()\n\t657: \t\t\t\t\tlastName: 'Smith',\n\t666: \t\t\t\texpect(result).toEqual(['name', 'lastName', 'getName']);\n\t673: \t\t\t\t\tthis.lastName= 'Smith';\n\t686: \t\t\t\texpect(result).toEqual(['name', 'lastName', 'getName']);\n\t718: \t\t\t\t\tlastValue,\n\t723: \t\t\t\t\t\tif (count === 3) {lastValue = item;}\n\t729: \t\t\t\texpect(lastValue).toBe(3);\n\t739: \t\t\t\t\tlastValue,\n\t744: \t\t\t\t\t\tif (count === 3) {lastValue = item;}\n\t754: \t\t\t\texpect(lastValue).toBe(3);\n\t907: \t\t\tit('should return true if at least one elemnt pass the predicator function', function ()\n\t1100: \t\t\tit('should return false if at least one item do not pass the predicate', function ()\n\nFound 47 matches in 7 files \n\n","undoManager":{"mark":-1,"position":21,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"text":" "},{"action":"removeText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"text":" "},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":36}},"text":"Searching for \u0001isInconsistent\u0001 in\u0001/\u0001"},{"action":"insertText","range":{"start":{"row":0,"column":36},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":2,"column":22}},"text":"/src/data/automata.js:"},{"action":"insertText","range":{"start":{"row":2,"column":22},"end":{"row":3,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":51}},"text":"\t65:                 return state.isInconsistent();"},{"action":"insertText","range":{"start":{"row":3,"column":51},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":19}},"text":"/src/data/state.js:"},{"action":"insertText","range":{"start":{"row":5,"column":19},"end":{"row":6,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":6,"column":0},"end":{"row":8,"column":0}},"lines":["\t180:         state.prototype.isInconsistent = function() {",""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":34}},"text":"/tests/specs/data/specAutomata.js:"},{"action":"insertText","range":{"start":{"row":8,"column":34},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":9,"column":0},"end":{"row":11,"column":0}},"lines":["\t119: \t\t\t\t\t\tisInconsistent: function ()",""]},{"action":"insertText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":27}},"text":"Found 3 matches in 3 files "},{"action":"insertText","range":{"start":{"row":11,"column":27},"end":{"row":12,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":36},"end":{"row":0,"column":65}},"text":" (Found 3 matches in 3 files)"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":13,"column":0}},"nl":"\n","lines":["Searching for \u0001isInconsistent\u0001 in\u0001/\u0001 (Found 3 matches in 3 files)","","/src/data/automata.js:","\t65:                 return state.isInconsistent();","","/src/data/state.js:","\t180:         state.prototype.isInconsistent = function() {","","/tests/specs/data/specAutomata.js:","\t119: \t\t\t\t\t\tisInconsistent: function ()","","Found 3 matches in 3 files ",""]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":53}},"text":"Searching for \u0001isInconsistent\u0001 in\u0001the entire project\u0001"},{"action":"insertText","range":{"start":{"row":0,"column":53},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":2,"column":22}},"text":"/src/data/automata.js:"},{"action":"insertText","range":{"start":{"row":2,"column":22},"end":{"row":3,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":51}},"text":"\t65:                 return state.isInconsistent();"},{"action":"insertText","range":{"start":{"row":3,"column":51},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":19}},"text":"/src/data/state.js:"},{"action":"insertText","range":{"start":{"row":5,"column":19},"end":{"row":6,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":6,"column":0},"end":{"row":8,"column":0}},"lines":["\t180:         state.prototype.isInconsistent = function() {",""]},{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":34}},"text":"/tests/specs/data/specAutomata.js:"},{"action":"insertText","range":{"start":{"row":8,"column":34},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":39}},"text":"\t119: \t\t\t\t\t\tisInconsistent: function ()"},{"action":"insertText","range":{"start":{"row":9,"column":39},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":10,"column":0},"end":{"row":11,"column":0}},"lines":[""]},{"action":"insertText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":27}},"text":"Found 3 matches in 3 files "},{"action":"insertText","range":{"start":{"row":11,"column":27},"end":{"row":12,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":53},"end":{"row":0,"column":82}},"text":" (Found 3 matches in 3 files)"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":13,"column":0}},"nl":"\n","lines":["Searching for \u0001isInconsistent\u0001 in\u0001the entire project\u0001 (Found 3 matches in 3 files)","","/src/data/automata.js:","\t65:                 return state.isInconsistent();","","/src/data/state.js:","\t180:         state.prototype.isInconsistent = function() {","","/tests/specs/data/specAutomata.js:","\t119: \t\t\t\t\t\tisInconsistent: function ()","","Found 3 matches in 3 files ",""]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":48}},"text":"Searching for \u0001fromArray\u0001 in\u0001the entire project\u0001"},{"action":"insertText","range":{"start":{"row":0,"column":48},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":2,"column":21}},"text":"/src/data/grammar.js:"},{"action":"insertText","range":{"start":{"row":2,"column":21},"end":{"row":3,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":51}},"text":"\t85:         nonTerminal.fromArray = function (arr)"},{"action":"insertText","range":{"start":{"row":3,"column":51},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":28}},"text":"/src/data/sampleGrammars.js:"},{"action":"insertText","range":{"start":{"row":5,"column":28},"end":{"row":6,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":6,"column":0},"end":{"row":19,"column":0}},"lines":["\t21: \t\t\ttail: k.data.NonTerminal.fromArray(['E']),","\t27: \t\t\ttail: k.data.NonTerminal.fromArray(['E','Q', 'F']),","\t33: \t\t\ttail: k.data.NonTerminal.fromArray(['F']),","\t78: \t\t\ttail: k.data.NonTerminal.fromArray(['OPAREN','EXPS','CPAREN']),","\t84: \t\t\ttail: k.data.NonTerminal.fromArray(['EXPS','EXP']),","\t142: \t\t\ttail: k.data.NonTerminal.fromArray(['E']),","\t148: \t\t\ttail: k.data.NonTerminal.fromArray(['E','Q', 'F']),","\t154: \t\t\ttail: k.data.NonTerminal.fromArray(['F']),","\t207: \t\t\ttail: k.data.NonTerminal.fromArray(['E']),","\t213: \t\t\ttail: k.data.NonTerminal.fromArray(['E', 'R', 'T']),","\t219: \t\t\ttail: k.data.NonTerminal.fromArray(['T']),","\t231: \t\t\ttail: k.data.NonTerminal.fromArray(['OPAREN', 'E', 'CPAREN']),",""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":33}},"text":"/tests/specs/data/specGrammar.js:"},{"action":"insertText","range":{"start":{"row":19,"column":33},"end":{"row":20,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":20,"column":0},"end":{"row":48,"column":0}},"lines":["\t116: \t\t\tvar result = k.data.NonTerminal.fromArray(['A','B']);","\t126: \t\t\tvar result = k.data.NonTerminal.fromArray('AB');","\t137: \t\t\t\tk.data.NonTerminal.fromArray([{}]);","\t141: \t\t\t\tk.data.NonTerminal.fromArray([true]);","\t145: \t\t\t\tk.data.NonTerminal.fromArray([12]);","\t149: \t\t\t\tk.data.NonTerminal.fromArray(12);","\t153: \t\t\t\tk.data.NonTerminal.fromArray(true);","\t158: \t\t\texpect(k.data.NonTerminal.fromArray([])).toEqual([]);","\t425: \t\t\t\t\ttail: k.data.NonTerminal.fromArray(['ONE', 'TWO'])","\t445: \t\t\t\t\ttail: k.data.NonTerminal.fromArray(['ONE', 'TWO']),","\t479: \t\t\t\ttail: k.data.NonTerminal.fromArray(['OPAREN','EXPS','CPAREN'])","\t484: \t\t\t\ttail: k.data.NonTerminal.fromArray(['EXPS','EXP'])","\t616: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['A'])","\t620: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t642: \t\t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['A'])","\t646: \t\t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t671: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['A'])","\t675: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t708: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['A'])","\t736: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['A'])","\t740: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t767: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['A'])","\t771: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t801: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t831: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])","\t860: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B', 'C', 'A'])","\t894: \t\t\t\t\t\t\ttail: k.data.NonTerminal.fromArray(['B'])",""]},{"action":"insertText","range":{"start":{"row":48,"column":0},"end":{"row":48,"column":32}},"text":"/tests/specs/lexer/specLexer.js:"},{"action":"insertText","range":{"start":{"row":48,"column":32},"end":{"row":49,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":49,"column":0},"end":{"row":49,"column":86}},"text":"\t177: \t                    tail: [new k.data.NonTerminal.fromArray(['short','large'])]"},{"action":"insertText","range":{"start":{"row":49,"column":86},"end":{"row":50,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":50,"column":0},"end":{"row":51,"column":0}},"lines":[""]},{"action":"insertText","range":{"start":{"row":51,"column":0},"end":{"row":51,"column":28}},"text":"Found 41 matches in 4 files "},{"action":"insertText","range":{"start":{"row":51,"column":28},"end":{"row":52,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":52,"column":0},"end":{"row":53,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":48},"end":{"row":0,"column":78}},"text":" (Found 41 matches in 4 files)"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":33,"column":0}},"nl":"\n","lines":["Searching for \u0001.reduce\u0001 in\u0001/\u0001 (Found 19 matches in 6 files)","","/src/data/grammar.js:","\t168:         * @param {Function} options.reduceFunc A function to be executed when reducint this rule","\t539:             strResult += k.utils.obj.reduce(k.utils.obj.sortBy(this.rules, function(rule) {return rule.index;}), function (strAcc, rule) {","","/src/data/state.js:","\t118:             return k.utils.obj.reduce(","","/src/parser/automataLR0Generator.js:","\t210: \t\t\t\t\t\t\t\taction: tableAction.REDUCE,","","/src/parser/parser.js:","\t83: \t\t\t\telse if (actionToDo.action === k.parser.tableAction.REDUCE)","\t139: \t\t\t\tlastItem.currentValue = k.utils.obj.isFunction(actionToDo.rule.reduceFunc) ? actionToDo.rule.reduceFunc.call(this, reduceFunctionParameters) : lastItem.symbol;","","/src/utils/obj.js:","\t250: \t\t\tnativeReduce       \t= ArrayProto.reduce,","\t361: \t\t\tif (nativeReduce && obj.reduce === nativeReduce)","\t367: \t\t\t\treturn initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);","","/tests/specs/utils/specObj.js:","\t782: \t\t\t\tk.utils.obj.reduce(null, iterator, '');","\t794: \t\t\t\tk.utils.obj.reduce([1], function()","\t805: \t\t\t\t\tk.utils.obj.reduce();","\t809: \t\t\t\t\tk.utils.obj.reduce([1]);","\t813: \t\t\t\t\tk.utils.obj.reduce([1], {});","\t820: \t\t\t\tk.utils.obj.reduce([1,2], fakeIterator, '');","\t832: \t\t\t\tk.utils.obj.reduce([1,2], function(acc, val, ind, list)","\t842: \t\t\t\tvar result = k.utils.obj.reduce([1,2,3], function (acc, val)","","Found 19 matches in 6 files ",""]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":35}},"text":"Searching for \u0001.rule\u0001 in\u0001/src/data\u0001"},{"action":"insertText","range":{"start":{"row":0,"column":35},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":2,"column":21}},"text":"/src/data/grammar.js:"},{"action":"insertText","range":{"start":{"row":2,"column":21},"end":{"row":3,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":103}},"text":"\t25:         * @param {Rule} options.rule Rule at which this particular instance of a symbol belongs to"},{"action":"insertText","range":{"start":{"row":3,"column":103},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":55,"column":0}},"lines":["\t53:             var ruleAux = this.rule;","\t54:             this.rule = null;","\t56: \t\t\tthis.rule = cloneOptions.rule = ruleAux;","\t109:             var ruleAux = this.rule;","\t110:             this.rule = null;","\t112: \t\t\tthis.rule = cloneOptions.rule = ruleAux;","\t162:             var ruleAux = this.rule;","\t163:             this.rule = null;","\t165: \t\t\tthis.rule = cloneOptions.rule = ruleAux;","\t228: \t\t\t    symbol.rule = this;","\t286:         * @param {[Rule]} options.rules Array of grammatical rules","\t331:                         (this.rulesByHeader[symbol.name] && k.utils.obj.every(this.rulesByHeader[symbol.name], function (rule) { return !rule.isProductive; } ) ) ||","\t332:                         (!this.rulesByHeader[symbol.name])","\t361:             this.rules.unshift(augmentedRule);","\t365:             k.utils.obj.each(this.rules, function (rule, i) {","\t371:             this.rulesByHeader = k.utils.obj.groupBy(this.rules, function (rule)","\t380:                 k.utils.obj.each(this.rules, function (rule)","\t392:                 while (ruleIndex < this.rules.length)","\t394:                     if (!this.rules[ruleIndex].isProductive) {","\t395:                         this.rules.splice(ruleIndex, 1);","\t401:                 if (this.rules.length === 0)","\t409:                     this.rules.unshift(augmentedRule);","\t419:                 k.utils.obj.each(this.rules, function (rule)","\t427:                                 k.utils.obj.each(this.rulesByHeader[symbol.name], function (rule)","\t443:                 while (ruleIndex < this.rules.length)","\t445:                     if (!this.rules[ruleIndex].isReachable) {","\t446:                         this.rules.splice(ruleIndex, 1);","\t456:             k.utils.obj.each(this.rules, function (rule)","\t482:                 k.utils.obj.each(this.rules, function (rule)","\t507:                     k.utils.obj.map(this.rules, function (rule)","\t525:                     k.utils.obj.map(this.rules, function (rule)","\t548:             return this.rulesByHeader[symbol.name];","\t557:             strResult += k.utils.obj.reduce(k.utils.obj.sortBy(this.rules, function(rule) {return rule.index;}), function (strAcc, rule) {","","/src/data/itemRule.js:","\t19: \t\t* @param {Rule} options.rule Rule wich is pointed be this item","\t36: \t\t\tif (this.rule && this.rule.tail.length === 1 && this.rule.tail[0].name === k.data.specialSymbol.EMPTY)","\t47: \t\t\tvar aux = this.rule.head.name +'-->';","\t48: \t\t\tfor (var i = 0; i < this.rule.tail.length; i++)","\t50: \t\t\t\taux += (this.dotLocation === i ? '*': ' ') + this.rule.tail[i].toString();","\t82: \t\t\tvar ruleAux = this.rule;","\t83: \t\t\tthis.rule = null;","\t85: \t\t\tthis.rule = ruleAux;","\t87: \t\t\tif ((!cloneUpdateOptions || !cloneUpdateOptions.dontCloneRule) && this.rule)","\t89: \t\t\t\tresult.rule = this.rule.clone(cloneUpdateOptions);","\t91: \t\t\telse if (this.rule)","\t93: \t\t\t\tresult.rule = this.rule;","\t126: \t\t\treturn this.rule.index + '(' + this.dotLocation + ')';","\t135: \t\t\treturn this.dotLocation < (this.rule.tail.length + 1) ? this.rule.tail[this.dotLocation] : null;","\t142: \t\t\treturn this.dotLocation === this.rule.tail.length;",""]},{"action":"insertText","range":{"start":{"row":55,"column":0},"end":{"row":55,"column":28}},"text":"/src/data/sampleGrammars.js:"},{"action":"insertText","range":{"start":{"row":55,"column":28},"end":{"row":56,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":56,"column":0},"end":{"row":84,"column":0}},"lines":["\t19: \t\tvar S = new k.data.Rule({","\t25: \t\tE1 = new k.data.Rule({","\t31: \t\tE2 = new k.data.Rule({","\t37: \t\tQ = new k.data.Rule({","\t43: \t\tF = new k.data.Rule({","\t76: \t\tvar S = new k.data.Rule({","\t82: \t\tEXPS1 = new k.data.Rule({","\t88:         EXPS2 = new k.data.Rule({","\t93: \t\tEXP = new k.data.Rule({","\t99: \t\tOPAREN = new k.data.Rule({","\t105: \t\tCPAREN = new k.data.Rule({","\t140: \t\tvar S = new k.data.Rule({","\t146: \t\tE1 = new k.data.Rule({","\t152: \t\tE2 = new k.data.Rule({","\t158: \t\tQ1 = new k.data.Rule({","\t164: \t\tQ2 = new k.data.Rule({","\t169: \t\tF = new k.data.Rule({","\t205: \t\tvar S = new k.data.Rule({","\t211: \t\tE1 = new k.data.Rule({","\t217: \t\tE2 = new k.data.Rule({","\t223: \t\tT1 = new k.data.Rule({","\t229: \t\tT2 = new k.data.Rule({","\t235: \t\tOPAREN = new k.data.Rule({","\t241: \t\tCPAREN = new k.data.Rule({","\t247: \t\tR = new k.data.Rule({","\t279: \t\tvar A1 = new k.data.Rule({","\t285: \t\tA2 = new k.data.Rule({",""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":84,"column":0},"end":{"row":84,"column":19}},"text":"/src/data/state.js:"},{"action":"insertText","range":{"start":{"row":84,"column":19},"end":{"row":85,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":85,"column":0},"end":{"row":91,"column":0}},"lines":["\t93:                     return item.rule.index;","\t96:                     return item.rule.index;","\t113:             if (this._items.length === 1 && this._items[0].rule.name === k.data.Grammar.constants.AugmentedRuleName && this._items[0].dotLocation === 2)","\t121:                     return item.rule.index;","\t124:                     return acc + item.rule.index + '(' + item.dotLocation + ')';",""]},{"action":"insertText","range":{"start":{"row":91,"column":0},"end":{"row":91,"column":28}},"text":"Found 91 matches in 4 files "},{"action":"insertText","range":{"start":{"row":91,"column":28},"end":{"row":92,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":92,"column":0},"end":{"row":93,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":35},"end":{"row":0,"column":65}},"text":" (Found 91 matches in 4 files)"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":17,"column":0}},"nl":"\n","lines":["Searching for \u0001optional\u0001 in\u0001/\u0001 (Found 7 matches in 3 files)","","/src/data/grammar.js:","\t292:         * @param {String} options.name Optional name of the grammar","","/src/data/itemRule.js:","\t62: \t\t* @param {Object} creationOptions Optional object use to expand current option used to create the returned clone","\t77: \t\t* @param {Object} cloneUpdateOptions Optional object use to control the way the options are being cloned","\t78: \t\t* @param {Object} extendedOptions Optional object use to expand current options and create the returned clone","","/src/utils/obj.js:","\t41:         * @param {Function} options.set Optional function used ot override the default getter","\t42:         * @param {Function} options.get Optional function used ot override the default setter","\t386: \t\t* Optionally, pass arguments to the function to pre-fill them, also known as partial application","","Found 7 matches in 3 files ",""]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":25}},"text":"Searching for \u0001ast\u0001 in\u0001/\u0001"},{"action":"insertText","range":{"start":{"row":0,"column":25},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":2,"column":14}},"text":"/Gruntfile.js:"},{"action":"insertText","range":{"start":{"row":2,"column":14},"end":{"row":3,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":62}},"text":"\t26: \t\t\t\t\t\treturn filepath.substr( filepath.lastIndexOf('/'));"},{"action":"insertText","range":{"start":{"row":3,"column":62},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"lines":[""]},{"action":"insertText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":21}},"text":"/src/data/grammar.js:"},{"action":"insertText","range":{"start":{"row":5,"column":21},"end":{"row":6,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":86}},"text":"\t468:                         //if it is not last one or the previous one is not empty"},{"action":"insertText","range":{"start":{"row":6,"column":86},"end":{"row":7,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":23}},"text":"/src/data/stackItem.js:"},{"action":"insertText","range":{"start":{"row":8,"column":23},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":9,"column":0},"end":{"row":12,"column":0}},"lines":["\t17:         * @param {Automata} options.AST The underprocessing AST. The Sub-tree AST for the current node","\t25:             k.utils.obj.defineProperty(this, 'AST');",""]},{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":22}},"text":"/src/parser/parser.js:"},{"action":"insertText","range":{"start":{"row":12,"column":22},"end":{"row":13,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":52}},"text":"\t73: \t\t\t\tlastItem = this.stack[this.stack.length-1];"},{"action":"insertText","range":{"start":{"row":13,"column":52},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":14,"column":0},"end":{"row":30,"column":0}},"lines":["\t77: \t\t\t\tactionToDo = this.actionTable(lastItem.state.getIdentity(), this.currentInput.terminal);","\t80: \t\t\t\t\tlastItem.symbol = this.currentInput.terminal;","\t81: \t\t\t\t\tlastItem.currentValue = this.currentInput.string;","\t86: \t\t\t\t\tlastItem = this._reduce(actionToDo);","\t90: \t\t\t\t\tlastItem = this._reduce(actionToDo);","\t96: \t\t\t\tstateToGo = this.gotoTable[lastItem.state.getIdentity()][lastItem.symbol];","\t106: \t\t\t\tlastItem = this.stack[this.stack.length-1];","\t113: \t\t* @returns {Object} The last item in the stack already updated */","\t117: \t\t\t//Generate AST!","\t120: \t\t\t\tlastItem = this.stack[this.stack.length - 1];","\t128: \t\t\t\t// Get the last n (rule length) elements of the stack ignoring the last one, which is just there for the previous GoTo Action.","\t138: \t\t\t\tlastItem = this.stack[this.stack.length - 1];","\t139: \t\t\t\tlastItem.symbol = actionToDo.rule.head;","\t140: \t\t\t\tlastItem.currentValue = k.utils.obj.isFunction(actionToDo.rule.reduceFunc) ? actionToDo.rule.reduceFunc.call(this, reduceFunctionParameters) : lastItem.symbol;","\t143: \t\t\treturn lastItem;",""]},{"action":"insertText","range":{"start":{"row":30,"column":0},"end":{"row":30,"column":18}},"text":"/src/utils/obj.js:"},{"action":"insertText","range":{"start":{"row":30,"column":18},"end":{"row":31,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":0},"end":{"row":31,"column":60}},"text":"\t217: \t\t// \t\tlastArgument = arguments[arguments.length - 1],"},{"action":"insertText","range":{"start":{"row":31,"column":60},"end":{"row":32,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":32,"column":0},"end":{"row":39,"column":0}},"lines":["\t221: \t\t// \tif(__isFunction(lastArgument)) {","\t222: \t\t// \t\tareEqualFunction = lastArgument;","\t449: \t\t/* @func Determine if at least one element in the object matches a truth test","\t453:         * @returns {Boolean} True if at least one item pass the predicate, false otherwise","\t671:         * @param {Booelan} isSorted When the array is sorted pass true and the algorithm will perform a faster approach","\t701: \t\t/* @func Produce a duplicate-free version of the array. If the array has already been sorted, you have the option of using a faster algorithm.",""]},{"action":"insertText","range":{"start":{"row":39,"column":0},"end":{"row":39,"column":48}},"text":"/tests/specs/parser/specAutomataLR0Generator.js:"},{"action":"insertText","range":{"start":{"row":39,"column":48},"end":{"row":40,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":40,"column":0},"end":{"row":40,"column":51}},"text":"\t302: \t\t\t//TODO ADD AT LEAST 2 MORE LR(0) GRAMMARS!"},{"action":"insertText","range":{"start":{"row":40,"column":51},"end":{"row":41,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":41,"column":0},"end":{"row":43,"column":0}},"lines":["\t332: \t\t\t//TODO ADD AT LEAST 2 MORE LR(0) GRAMMARS SAMPLES!",""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":30}},"text":"/tests/specs/utils/specObj.js:"},{"action":"insertText","range":{"start":{"row":43,"column":30},"end":{"row":44,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":44,"column":0},"end":{"row":58,"column":0}},"lines":["\t83: \t\t\tit('should at least specify context and property name', function()","\t657: \t\t\t\t\tlastName: 'Smith',","\t666: \t\t\t\texpect(result).toEqual(['name', 'lastName', 'getName']);","\t673: \t\t\t\t\tthis.lastName= 'Smith';","\t686: \t\t\t\texpect(result).toEqual(['name', 'lastName', 'getName']);","\t718: \t\t\t\t\tlastValue,","\t723: \t\t\t\t\t\tif (count === 3) {lastValue = item;}","\t729: \t\t\t\texpect(lastValue).toBe(3);","\t739: \t\t\t\t\tlastValue,","\t744: \t\t\t\t\t\tif (count === 3) {lastValue = item;}","\t754: \t\t\t\texpect(lastValue).toBe(3);","\t907: \t\t\tit('should return true if at least one elemnt pass the predicator function', function ()","\t1100: \t\t\tit('should return false if at least one item do not pass the predicate', function ()",""]},{"action":"insertText","range":{"start":{"row":58,"column":0},"end":{"row":58,"column":28}},"text":"Found 47 matches in 7 files "},{"action":"insertText","range":{"start":{"row":58,"column":28},"end":{"row":59,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":59,"column":0},"end":{"row":60,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":25},"end":{"row":0,"column":55}},"text":" (Found 47 matches in 7 files)"}]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"tabSize":4,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1405378572389}